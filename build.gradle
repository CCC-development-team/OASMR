/*
 *  Copyright (c) 2019. CCC-Development-Team
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

plugins {
    id 'java'
}

group 'fr.ensicaen.ecole.oasmr'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        url 'https://github.com/javaterminal/terminalfx/raw/master/releases'
    }
    maven {
        url 'https://github.com/javaterminal/pty4j/raw/master/releases'
    }
    maven {
        url 'http://www.sparetimelabs.com/maven2'
    }
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots'
    }

}

dependencies {
    implementation 'com.kodedu.terminalfx:terminalfx:1.0.8'
    implementation 'info.picocli:picocli:3.8.2'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.jfoenix:jfoenix:8.0.8'
    implementation 'org.controlsfx:controlsfx:8.40.14'
    implementation 'org.testfx:testfx-junit:4.0.15-alpha'
    implementation 'com.jfoenix:jfoenix:8.0.8'
    implementation 'org.controlsfx:controlsfx:8.40.14'
    implementation 'org.testfx:testfx-junit:4.0.15-alpha'
    implementation group: 'com.github.oshi', name: 'oshi-core', version: '3.13.0'
    implementation group: 'eu.hansolo', name: 'tilesfx', version: '1.6.5'
    implementation group: 'net.java.dev.jna', name: 'jna', version: '4.5.0'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
}
compileJava {
    options.compilerArgs += ["-parameters"]
}

task cli(type: JavaExec, dependsOn: classes) {
    main = 'fr.ensicaen.ecole.oasmr.cli.MainCli'
    classpath = sourceSets.main.runtimeClasspath
}

task supervisor(type: JavaExec, dependsOn: classes) {
    main = 'fr.ensicaen.ecole.oasmr.supervisor.SupervisorMain'
    classpath = sourceSets.main.runtimeClasspath
}

task node(type: JavaExec, dependsOn: classes) {
    main = 'fr.ensicaen.ecole.oasmr.supervisor.node.NodeService'
    classpath = sourceSets.main.runtimeClasspath
}

task app(type: JavaExec, dependsOn: classes) {
    main = 'fr.ensicaen.ecole.oasmr.app.Main'
    classpath = sourceSets.main.runtimeClasspath
}

task temp(type: JavaExec, dependsOn: classes) {
    main = 'fr.ensicaen.ecole.oasmr.lib.TestTemp'
    classpath = sourceSets.main.runtimeClasspath
}